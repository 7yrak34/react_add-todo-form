{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getNewId","Math","max","initialTodos","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","selectedUser","setSelectedUser","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","trim","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2e531fa.chunk.js","sourcesContent":["import React from 'react';\nimport User from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Todo from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"section box TodoList\">\n      <h2 className=\"title\">Todos</h2>\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport Todo from './types/Todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || usersFromServer[0];\n}\n\nfunction getNewId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n})) as Todo[];\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const addTodo = (todo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, todo]);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setHasTitleError(false);\n    setSelectedUser(0);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserError(!selectedUser);\n\n    if (!title.trim() || !selectedUser) {\n      return;\n    }\n\n    addTodo({\n      title,\n      userId: selectedUser,\n      completed: false,\n      id: getNewId(todos),\n      user: getUserById(selectedUser),\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <h1 className=\"title\">Add todo form</h1>\n        <form\n          className=\"form\"\n          action=\"/api/todos\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <label className=\"label\">\n              Title:\n              <br />\n              <input\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Please enter a title\"\n                className={classNames('input', {\n                  'is-danger': hasTitleError,\n                })}\n                value={title}\n                onChange={handleTitleChange}\n              />\n            </label>\n            {hasTitleError\n              && <span className=\"error\">Please enter a title</span>}\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">\n              User:\n              <br />\n              <div className={classNames('select', {\n                'is-danger': hasUserError,\n              })}\n              >\n                <select\n                  data-cy=\"userSelect\"\n                  value={selectedUser}\n                  onChange={handleUserChange}\n                >\n                  <option value=\"0\" disabled>Choose a user</option>\n                  {usersFromServer.map(user => (\n                    <option key={user.id} value={user.id}>{user.name}</option>\n                  ))}\n                </select>\n              </div>\n            </label>\n            {hasUserError\n              && <span className=\"error\">Please choose a user</span>}\n          </div>\n          <button\n            type=\"submit\"\n            className={classNames('button', 'is-link', {\n              'is-danger': hasTitleError || hasUserError,\n            })}\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}